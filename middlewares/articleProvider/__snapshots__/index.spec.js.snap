// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`articleProvider middleware should call next on error 1`] = `
Array [
  Array [
    [Error: example],
  ],
]
`;

exports[`articleProvider middleware should respond with article: request 1`] = `
EventEmitter {
  "_addBody": [Function],
  "_events": Object {},
  "_eventsCount": 0,
  "_maxListeners": undefined,
  "_setBaseUrl": [Function],
  "_setBody": [Function],
  "_setCookiesVariable": [Function],
  "_setFilesVariable": [Function],
  "_setHeadersVariable": [Function],
  "_setMethod": [Function],
  "_setOriginalUrl": [Function],
  "_setParameter": [Function],
  "_setSessionVariable": [Function],
  "_setSignedCookiesVariable": [Function],
  "_setURL": [Function],
  "accepts": [Function],
  "acceptsCharsets": [Function],
  "acceptsEncodings": [Function],
  "acceptsLanguages": [Function],
  "baseUrl": "",
  "body": Object {},
  "cookies": Object {},
  "files": Object {},
  "get": [Function],
  "header": [Function],
  "headers": Object {},
  "hostname": "",
  "is": [Function],
  "method": "GET",
  "originalUrl": "",
  "param": [Function],
  "params": Object {},
  "path": "",
  "query": Object {},
  "range": [Function],
  "send": [Function],
  "socket": Object {},
  "subdomains": Array [],
  "url": "",
  Symbol(kCapture): false,
}
`;

exports[`articleProvider middleware should respond with article: response 1`] = `
EventEmitter {
  "_getBuffer": [Function],
  "_getChunks": [Function],
  "_getData": [Function],
  "_getHeaders": [Function],
  "_getJSONData": [Function],
  "_getLocals": [Function],
  "_getRedirectUrl": [Function],
  "_getRenderData": [Function],
  "_getRenderView": [Function],
  "_getStatusCode": [Function],
  "_getStatusMessage": [Function],
  "_headers": Object {},
  "_isDataLengthValid": [Function],
  "_isEndCalled": [Function],
  "_isJSON": [Function],
  "_isUTF8": [Function],
  "append": [Function],
  "clearCookie": [Function],
  "contentType": [Function],
  "cookie": [Function],
  "cookies": Object {},
  "destroy": [Function],
  "destroySoon": [Function],
  "end": [Function],
  "finished": true,
  "format": [Function],
  "get": [Function],
  "getEncoding": [Function],
  "getHeader": [Function],
  "getHeaderNames": [Function],
  "getHeaders": [Function],
  "hasHeader": [Function],
  "header": [Function],
  "headersSent": true,
  "json": [Function],
  "jsonp": [Function],
  "locals": Object {},
  "location": [Function],
  "redirect": [Function],
  "removeHeader": [Function],
  "render": [Function],
  "send": [Function],
  "sendStatus": [Function],
  "set": [Function],
  "setEncoding": [Function],
  "setHeader": [Function],
  "status": [Function],
  "statusCode": 200,
  "statusMessage": "OK",
  "type": [Function],
  "vary": [Function],
  "writableEnded": true,
  "writableFinished": true,
  "write": [Function],
  "writeHead": [Function],
}
`;
